---
version: '2'
services:
    ksqldb-server:
        image: confluentinc/cp-ksqldb-server:5.5.1
        hostname: ksqldb-server
        container_name: ksqldb-server
        ports:
            - "8089:8089"
            - "1100:1100"
        environment:
            KSQL_OPTS: "-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.port=1100 -Dcom.sun.management.jmxremote.rmi.port=1100 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
            KSQL_HOST_NAME: ksqldb-server
            KSQL_CONFIG_DIR: "/etc/ksql"
            KSQL_LISTENERS: "http://0.0.0.0:8089"
            KSQL_KSQL_SCHEMA_REGISTRY_URL: ${SR_BOOT}
            KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: "USER_INFO"
            KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "${SR_USER}:${SR_PASS}"
            KSQL_BOOTSTRAP_SERVERS: ${BOOTSTRAP}
            KSQL_SECURITY_PROTOCOL: "SASL_SSL"
            KSQL_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            KSQL_SASL_MECHANISM: "PLAIN"
            KSQL_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
            KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 3
            KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 3
            KSQL_KSQL_SINK_REPLICAS: 3
            # Producer Confluent Monitoring Interceptors for Control Center streams monitoring
            KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
            KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: "SASL_SSL"
            KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            # Consumer Confluent Monitoring Interceptors for Control Center streams monitoring
            KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
            KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: "SASL_SSL"
            KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            KSQL_KSQL_CONNECT_URL: "http://connect:8083"

    control-center:
        image: confluentinc/cp-enterprise-control-center:5.5.1
        hostname: control-center
        container_name: control-center
        ports:
            - "9021:9021"
            - "1101:1101"
        environment:
            CONTROL_CENTER_OPTS: "-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.port=1101 -Dcom.sun.management.jmxremote.rmi.port=1101 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
            CONTROL_CENTER_BOOTSTRAP_SERVERS: ${BOOTSTRAP}
            CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8089"
            CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8089"
            CONTROL_CENTER_SCHEMA_REGISTRY_URL: ${SR_BOOT}
            CONTROL_CENTER_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: "USER_INFO"
            CONTROL_CENTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "${SR_USER}:${SR_PASS}"
            CONTROL_CENTER_CONNECT_CLUSTER: "http://connect:8083"
            CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_SSL
            CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            CONTROL_CENTER_STREAMS_SASL_MECHANISM: PLAIN
            CONTROL_CENTER_REPLICATION_FACTOR: 3
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 3
            CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 3
            CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 3
            CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 3
            CONFLUENT_METRICS_TOPIC_REPLICATION: 3
            CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 3
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            # Workaround for MMA-3564
            CONTROL_CENTER_METRICS_TOPIC_MAX_MESSAGE_BYTES: 8388608
            PORT: 9021
        
    connect:
        image: confluentinc/cp-kafka-connect:5.5.1
        hostname: connect
        container_name: connect
        ports:
            - "8083:8083"
            - "1102:1102"
            - "1111:1111"
        volumes:
            - "/Users/aleal/Documents/Git/docker-cloud-peripherals/JMS:/usr/share/java/kafka/JMS-Stuff"
            - "/Users/aleal/Documents/Git/docker-cloud-peripherals/CAstuff:/tmp/stores"
            - "/Users/aleal/Documents/Git/docker-cloud-peripherals/monitoring-stack/settings:/etc/prometheus/"
        environment:
            KAFKA_OPTS: "-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.port=1102 -Dcom.sun.management.jmxremote.rmi.port=1102 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -javaagent:/etc/prometheus/jmx_prometheus_javaagent-0.13.0.jar=1111:/etc/prometheus/connect-exporter-config.yml"
            CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
            CONNECT_BOOTSTRAP_SERVERS: ${BOOTSTRAP}
            CONNECT_REST_PORT: 8083
            CONNECT_GROUP_ID: "connect"
            CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
            CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
            CONNECT_STATUS_STORAGE_TOPIC: connect-status
            CONNECT_REPLICATION_FACTOR: 3
            CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
            CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
            CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
            CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: ${SR_BOOT}
            CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: "USER_INFO"
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "${SR_USER}:${SR_PASS}"
            CONNECT_REST_ADVERTISED_HOST_NAME: "connect-mongo"
            CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
            CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
            # CLASSPATH required due to CC-2422
            CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.5.0.jar
            # Connect worker
            CONNECT_SECURITY_PROTOCOL: SASL_SSL
            CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            CONNECT_SASL_MECHANISM: PLAIN
            CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
            # Connect producer
            CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
            CONNECT_PRODUCER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
            CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL
            CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
            # Connect consumer
            CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
            CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
            CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL
            CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
            CONNECT_CONFLUENT_TOPIC_BOOTSTRAP_SERVERS": ${BOOTSTRAP}
            CONNECT_CONFLUENT_TOPIC_SASL_JAAS_CONFIG": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${USERNAME}\" password=\"${PASSWORD}\";"
            CONNECT_CONFLUENT_TOPIC_SECURITY_PROTOCOL": "SASL_SSL"
            CONNECT_CONFLUENT_TOPIC_SASL_MECHANISM": "PLAIN"

    prometheus:
        image: prom/prometheus:latest
        volumes:
        - "/Users/aleal/Documents/Git/docker-cloud-peripherals/monitoring-stack/settings:/etc/prometheus/"
        command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
        - 9090:9090

    grafana:
        image: grafana/grafana:latest
        depends_on:
        - prometheus
        ports:
        - 3000:3000
        volumes:
        - "/Users/aleal/Documents/Git/docker-cloud-peripherals/monitoring-stack/settings:/etc/grafana/provisioning/"

    
